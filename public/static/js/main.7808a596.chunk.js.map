{"version":3,"sources":["scss/global.module.scss","scss/counter.module.scss","utils/string.manipulation.js","utils/statistics.utils.js","components/general.components.jsx","prefabs/Navbar.prefabs.jsx","components/Home.component.jsx","App.js","index.js"],"names":["module","exports","stringtoDate","str","y","substring","m","d","Date","datetoShortDate","date","getDate","monthtoString","getMonth","getFullYear","month","Array","downloadData","query","a","ret","undefined","xs","ys","console","log","axios","get","country","then","res","data","arr","forEach","e","push","Confirmed","Cases","TotalConfirmed","finally","GeneralChart","params","ref","createRef","useEffect","ctx","current","getContext","Chart","type","labels","datasets","label","backgroundColor","borderColor","pointRadius","options","responsive","tooltips","enabled","intersect","callbacks","title","tooltipItems","xLabel","casetype","yLabel","scales","xAxes","ticks","callback","value","index","values","id","width","height","MyNavbar","bg","variant","Brand","href","Nav","className","Link","Form","inline","FormControl","placeholder","Button","Home","styles","red","Navbar","sticky","Item","NavDropdown","eventKey","Divider","App","useState","number","setNumber","setTimeout","bgBlack","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7808a596.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"global_red__d_LKM\",\"bgBlack\":\"global_bgBlack__2k_UB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counterCases\":\"counter_counterCases__3Xilc\"};","export function inttoString(n) {\r\n  var str = n.toString();\r\n  var s = \"\";\r\n  if (str.length < 4) {\r\n    return str;\r\n  }\r\n  for (let i = 0; i < str.length; i++) {\r\n    if (i % 3 === 0 && i !== 0) {\r\n      s += \",\" + str.charAt(str.length - i - 1);\r\n    } else {\r\n      s += str.charAt(str.length - i - 1);\r\n    }\r\n  }\r\n  return s.split(\"\").reverse().join(\"\");\r\n}\r\n\r\nexport function stringtoDate(str) {\r\n  var y = str.substring(0, 4);\r\n  var m = str.substring(5, 7);\r\n  var d = str.substring(8, 10);\r\n\r\n  return new Date(y, m, d);\r\n}\r\n\r\nexport function datetoShortDate(date) {\r\n  var d = date.getDate();\r\n  var m = monthtoString(date.getMonth());\r\n  //console.log(date.getMonth());\r\n  //console.log(m);\r\n\r\n  var y = date.getFullYear();\r\n  return d + \" \" + m + \" \" + y;\r\n}\r\n\r\nexport function monthtoString(d) {\r\n  //console.log(d);\r\n  var month = new Array();\r\n  month[0] = \"Dicembre\";\r\n  month[1] = \"Gennaio\";\r\n  month[2] = \"Febbraio\";\r\n  month[3] = \"Marzo\";\r\n  month[4] = \"Aprile\";\r\n  month[5] = \"Maggio\";\r\n  month[6] = \"Giugno\";\r\n  month[7] = \"Luglio\";\r\n  month[8] = \"Agosto\";\r\n  month[9] = \"Settembre\";\r\n  month[10] = \"Ottobre\";\r\n  month[11] = \"Novembre\";\r\n  return month[d];\r\n}\r\n","import axios from \"axios\";\r\nimport {\r\n  stringtoDate,\r\n  stringtoShortDate,\r\n  datetoShortDate,\r\n} from \"./string.manipulation\";\r\n\r\nexport async function downloadData(query) {\r\n  var ret = undefined;\r\n  const xs = [];\r\n  const ys = [];\r\n  console.log(query);\r\n  //http://localhost:5000/api/data?country=world\r\n  //https://api.covid19api.com/dayone/country/italy/status/confirmed\r\n  /*Prende solo da paesi!!!*/\r\n  await axios\r\n    .get(\"http://localhost:5000/api/data?country=\" + query.country)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      const arr = res.data;\r\n      //const map = new Map();\r\n\r\n      /*\r\n        arr.forEach(e =>{\r\n            map.set(stringtoShortDate(e.Date),e.Cases);\r\n        });\r\n        */\r\n\r\n      //setting axes for chart\r\n      arr.forEach((e) => {\r\n        //console.log(e.Date);\r\n        xs.push(stringtoDate(e.Date));\r\n      });\r\n      /*\r\n      arr.forEach((e) => {\r\n        ys.push(e.);\r\n      });*/\r\n      //controllo che dato inserire sull'asse delle ordinate\r\n\r\n      if (\r\n        arr[0].Confirmed !== undefined &&\r\n        arr[0].Cases === undefined &&\r\n        arr[0].TotalConfirmed === undefined\r\n      ) {\r\n        arr.forEach((e) => {\r\n          ys.push(e.Confirmed);\r\n        });\r\n      }\r\n      if (\r\n        arr[0].Cases !== undefined &&\r\n        arr[0].Confirmed === undefined &&\r\n        arr[0].TotalConfirmed === undefined\r\n      ) {\r\n        arr.forEach((e) => {\r\n          ys.push(e.Cases);\r\n        });\r\n      }\r\n      if (\r\n        arr[0].TotalConfirmed !== undefined &&\r\n        arr[0].Cases === undefined &&\r\n        arr[0].Confirmed === undefined\r\n      ) {\r\n        arr.forEach((e) => {\r\n          ys.push(e.TotalConfirmed);\r\n        });\r\n      }\r\n\r\n      ret = { xs, ys };\r\n    })\r\n    .finally();\r\n  return ret;\r\n}\r\n","import React, { createRef, useEffect, useRef, useState } from \"react\";\r\nimport Chart from \"chart.js\";\r\nimport { downloadData } from \"../utils/statistics.utils\";\r\nimport {\r\n  datetoShortDate,\r\n  monthtoString,\r\n  stringtoDate,\r\n} from \"../utils/string.manipulation\";\r\n\r\nexport default function GeneralChart({ params, ...rest }) {\r\n  const ref = createRef();\r\n\r\n  useEffect(() => {\r\n    var ctx = ref.current.getContext(\"2d\");\r\n    downloadData(params).then((res) => {\r\n      const data = res;\r\n      /*\r\n      console.log(\"data.xsdates\");\r\n      console.log(data.xsdates);\r\n      */\r\n      //setData(localData)\r\n      new Chart(ctx, {\r\n        // The type of chart we want to create\r\n        type: params.type,\r\n\r\n        // The data for our dataset\r\n        data: {\r\n          labels: data.xs,\r\n          datasets: [\r\n            {\r\n              label: params.label + params.country,\r\n              backgroundColor: params.backgroundColor,\r\n              borderColor: params.borderColor,\r\n              pointRadius: params.pointRadius,\r\n              data: data.ys,\r\n            },\r\n          ],\r\n        },\r\n        options: {\r\n          responsive: params.responsive,\r\n          tooltips: {\r\n            enabled: params.tooltips.enabled,\r\n            intersect: params.tooltips.intersect,\r\n            callbacks: {\r\n              title: function (tooltipItems) {\r\n                //Return value for title\r\n                return datetoShortDate(tooltipItems[0].xLabel);\r\n              },\r\n              label: function (tooltipItems) {\r\n                //Return value for label\r\n                return params.casetype + \": \" + tooltipItems.yLabel;\r\n              },\r\n            },\r\n          },\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                ticks: {\r\n                  callback: function (value, index, values) {\r\n                    return (\r\n                      monthtoString(value.getMonth()) +\r\n                      \" \" +\r\n                      value.getFullYear()\r\n                    );\r\n                  },\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        },\r\n      });\r\n    });\r\n  }, []);\r\n  return (\r\n    <canvas id=\"customizeChart\" width=\"200\" height=\"100\" ref={ref}></canvas>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport NB from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\n\r\nexport default function MyNavbar() {\r\n  return (\r\n    <div>\r\n      <NB bg=\"dark\" variant=\"dark\">\r\n        <NB.Brand href=\"#home\">Navbar</NB.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"#home\">Home</Nav.Link>\r\n          <Nav.Link href=\"#features\">Features</Nav.Link>\r\n          <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\r\n        </Nav>\r\n        <Form inline>\r\n          <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n          <Button variant=\"outline-info\">Search</Button>\r\n        </Form>\r\n      </NB>\r\n      <br />\r\n      <NB bg=\"primary\" variant=\"dark\">\r\n        <NB.Brand href=\"#home\">Navbar</NB.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"#home\">Home</Nav.Link>\r\n          <Nav.Link href=\"#features\">Features</Nav.Link>\r\n          <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\r\n        </Nav>\r\n        <Form inline>\r\n          <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n          <Button variant=\"outline-light\">Search</Button>\r\n        </Form>\r\n      </NB>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport GeneralChart from \"./general.components.jsx\";\r\n//import Button from \"react-bootstrap/Button\";\r\nimport MyNavbar from \"../prefabs/Navbar.prefabs.jsx\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\nimport styles from \"../scss/global.module.scss\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div className={styles.red}>\r\n      <Navbar bg=\"primary\" variant=\"dark\" sticky=\"top\">\r\n        <Navbar.Brand href=\"#home\">CoronaSylum</Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Item>\r\n            <Nav.Link href=\"#covid\">Covid-19</Nav.Link>\r\n          </Nav.Item>\r\n          <NavDropdown title=\"About\" id=\"nav-dropdown\">\r\n            <NavDropdown.Item eventKey=\"4.1\">API</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"4.2\">Database</NavDropdown.Item>\r\n            <NavDropdown.Item eventKey=\"4.3\">Me</NavDropdown.Item>\r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item eventKey=\"4.4\">\r\n              View all Documentation\r\n            </NavDropdown.Item>\r\n          </NavDropdown>\r\n          <Nav.Item>\r\n            <Nav.Link href=\"#contacts\">Contacts</Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n\r\n        <Nav>\r\n          <Nav.Item>\r\n            <Nav.Link href=\"#login\">Sign In</Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Button\r\n              variant=\"outline-light\"\r\n              title=\"Create your account to access more data\"\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Nav.Item>\r\n        </Nav>\r\n      </Navbar>\r\n      <MyNavbar />\r\n      <h1>Home</h1>\r\n      <h6>\r\n        IO ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor\r\n        incidunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis\r\n        nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut\r\n        aliquid ex ea commodi consequatur. Quis aute iure reprehenderit in\r\n        voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur\r\n        sint obcaecat cupiditat non proident, sunt in culpa qui officia deserunt\r\n        mollit anim id est laborum.\r\n      </h6>\r\n\r\n      <GeneralChart\r\n        params={{\r\n          casetype: \"Cases\",\r\n          country: \"brazil\",\r\n          type: \"line\",\r\n          label: \"Chart of Coronavirus Cases in \",\r\n          backgroundColor: \"rgba(0, 195, 0, 0.5)\",\r\n          borderColor: \"rgba(0, 195, 0,1)\",\r\n          pointRadius: 0,\r\n          responsive: true,\r\n          tooltips: {\r\n            enabled: true,\r\n            intersect: false,\r\n          },\r\n        }}\r\n      />\r\n      <GeneralChart\r\n        params={{\r\n          casetype: \"Cases\",\r\n          country: \"usa\",\r\n          type: \"line\",\r\n          label: \"Chart of Coronavirus Cases in \",\r\n          backgroundColor: \"rgba(255, 99, 132, 0.5)\",\r\n          borderColor: \"rgba(255, 99, 132,1)\",\r\n          pointRadius: 0,\r\n          responsive: true,\r\n          tooltips: {\r\n            enabled: true,\r\n            intersect: false,\r\n          },\r\n        }}\r\n      />\r\n      {/*\r\n      <GeneralChart\r\n        params={{\r\n          casetype: \"Death\",\r\n          country: \"usa\",\r\n          type: \"line\",\r\n          label: \"Chart of Coronavirus death in \",\r\n          backgroundColor: \"rgba(255, 99, 132, 0.5)\",\r\n          borderColor: \"rgba(255, 99, 132,1)\",\r\n          pointRadius: 0,\r\n          responsive: true,\r\n          tooltips: {\r\n            enabled: true,\r\n            intersect: false,\r\n          },\r\n        }}\r\n      />\r\n      */}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Counter from \"./components/counter.components\";\r\nimport { inttoString } from \"./utils/string.manipulation\";\r\nimport { downloadData } from \"./utils/statistics.utils\";\r\nimport MyChart from \"./components/chart\";\r\nimport CallBackend from \"./components/backend.components\";\r\nimport GeneralChart from \"./components/general.components\";\r\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport Home from \"./components/Home.component\";\r\nimport styles from \"./scss/global.module.scss\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n//const JsonFile = CreateJsonChart(500, 250, \"description\");\r\n\r\nfunction App() {\r\n  const [number, setNumber] = useState(157_000);\r\n  useEffect(() => setTimeout(() => setNumber(number + 1), 1000), [number]);\r\n\r\n  return (\r\n    <div className={styles.bgBlack}>\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        {/*\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/singin\" component={SingIn} />\r\n        */}\r\n      </Switch>\r\n    </Router>\r\n    </div>\r\n  );\r\n  /*\r\n  return (\r\n    <div>\r\n      <CallBackend />\r\n      <Counter init={number} />\r\n      <MyChart></MyChart>\r\n      <GeneralChart nome=\"giovanni\" />\r\n    </div>\r\n  );\r\n  */\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport \"./scss/global.css\";\r\nimport styles from \"./scss/global.module.scss\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App className={styles.bgBlack}/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}